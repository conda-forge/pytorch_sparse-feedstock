{% set version = "0.6.18" %}
# see github.com/conda-forge/conda-forge.github.io/issues/1059 for naming discussion
{% set torch_proc_type = "cuda" if cuda_compiler_version != "None" else "cpu" %}

{% if cuda_compiler_version in (None, "None", True, False) %}
{% set cuda_major = 0 %}
{% else %}
{% set cuda_major = environ.get("cuda_compiler_version", "11.8").split(".")[0] | int %}
{% endif %}

package:
  name: pytorch_sparse
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/t/torch_sparse/torch_sparse-{{ version }}.tar.gz
  sha256: 2f14c510a6e93f404c6ea357210615b3c15a71731f9dbd86f25434e34fb5a741

build:
  number: 7
  skip: true  # [win]
  # pytorch in conda-forge does not support CUDA 11.8 as of v2.5
  skip: true  # [cuda_compiler_version == "11.8"]

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - pytorch                                # [build_platform != target_platform]
    - pytorch =*={{ torch_proc_type }}*      # [build_platform != target_platform]
    - {{ stdlib('c') }}
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}  # [cuda_compiler_version not in (undefined, 'None')]
  host:
    - python
    - pip
    - pybind11
    - pytorch
    - pytorch =*={{ torch_proc_type }}*
    - setuptools
    - pytest-runner
    - scipy
    - libxcrypt               # [linux and py<39]
    {% if cuda_major >= 12 %}
    - cuda-version {{ cuda_compiler_version }}  # [cuda_compiler_version != "None"]
    - cuda-driver-dev
    - cuda-cudart-dev
    - cuda-nvrtc-dev
    - cuda-nvtx-dev
    - cuda-nvml-dev
    - libcublas-dev
    - libcusparse-dev
    - libcusolver-dev 
    {% endif %}
 
  run:
    - python
    # Use the run_export to depend on pytorch
    # - pytorch 
    - pytest
    - pytest-cov
    - scipy
    - pytorch_scatter
  run_constrained:
    # additional run constraint to the one from the (version-only) run_export;
    # constraining the CPU builds to CPU pytorch isn't 100% necessary, but cleaner
    - pytorch =*={{ torch_proc_type }}*

test:
  imports:
    - torch_sparse

about:
  home: https://github.com/rusty1s/pytorch_sparse
  summary: PyTorch Extension Library of Optimized Autograd Sparse Matrix Operations
  license: MIT
  license_file: LICENSE
  dev_url: https://github.com/rusty1s/pytorch_sparse

extra:
  recipe-maintainers:
    - mxr-conda
    - rluria14
    - oblute
    - ndmaxar
    - mikemhenry
    - h-vetinari
